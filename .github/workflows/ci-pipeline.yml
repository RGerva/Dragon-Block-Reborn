name: Java CI Pipeline with Gradle (NeoForge)

on: [push, pull_request, workflow_dispatch]

jobs:

  validation:
    name: ✅ Gradle Wrapper Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

  dependency-submission:
    name: 📦 Submit Dependency Graph
    runs-on: ubuntu-latest
    needs: validation
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4

  spotless-check:
    name: ✨ Spotless Check
    runs-on: ubuntu-latest
    needs: validation
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Give permission to Gradlew
        run: chmod +x gradlew

      - name: Apply Spotless
        run: ./gradlew spotlessApply --no-daemon

  compile:
    name: 🛠️ Compile Project
    runs-on: ubuntu-latest
    needs: spotless-check
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Give permission to Gradlew
        run: chmod +x gradlew

      - name: Compile sources
        run: ./gradlew compileJava --no-daemon

  test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    needs: compile
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Give permission to Gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

  codecov:
    name: 📊 Code Coverage (Codecov)
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Give permission to Gradlew
        run: chmod +x gradlew

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport --no-daemon

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-report

  publish-javadoc:
    name: 🚀 Publish Javadoc to GitHub Pages
    runs-on: ubuntu-latest
    needs: generate-javadoc
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Generate Javadoc
        run: ./gradlew javadoc --no-daemon

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/docs/javadoc

  generate-data:
    name: 📄 Generate Data
    runs-on: ubuntu-latest
    needs: codecov
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Give permission to Gradlew
        run: chmod +x gradlew

      - name: Run generateDataTask
        run: ./gradlew runData --no-daemon

  run-client:
    name: 🎮 Launch Minecraft Client
    runs-on: ubuntu-latest
    needs: generate-data
    permissions:
      contents: read
    if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request' && github.base_ref == 'master' || startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Run Client in headless mode
        run: xvfb-run ./gradlew runClient --no-daemon

  release-build:
    name: 🚀 Release Build
    runs-on: ubuntu-latest
    needs: run-client
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Build Release Jar
        run: ./gradlew jar --no-daemon

      - name: Upload Jar Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-jar
          path: build/libs/*.jar